Yt
plot(Yt, xlab="Time", ylab="Sales", col="Blue")
m<- HoltWinters(Yt, alpha=0.2, beta=0.1, gamma=0.1, seasonal="additive")
m
MSE <- m$"SSE"/(NROW(Bike)-3)
MSE
Bike <- c(10,31,43,16,11,33,45,17,13,34,48,19,15,37,51,21)
Yt <- ts(Bike, frequency=4) #function “ts” is used to create time series
Yt
plot(Yt, xlab="Time", ylab="Sales", col="Blue")
m<- HoltWinters(Yt, alpha=0.2, beta=0.1, gamma=0.1, seasonal="additive")
m
MSE <- m$"SSE"/(NROW(Bike)-3)
MSE
predict(object=m, n.ahead=3,prediction.interval=T, level=.95)
MSE <- m$"SSE"/(NROW(Bike)-3)
MSE
Bike <- c(10,31,43,16,11,33,45,17,13,34,48,19,15,37,51,21)
Yt <- ts(Bike, frequency=4) #function “ts” is used to create time series
Yt
plot(Yt, xlab="Time", ylab="Sales", col="Blue")
m<- HoltWinters(Yt, alpha=0.2, beta=0.1, gamma=0.1, seasonal="additive")
m
MSE <- m$"SSE"/(NROW(Bike)-3)
MSE
predict(object=m, n.ahead=3,prediction.interval=T, level=.95)
m$SSE
setwd("E:/EUGENE POK/Documents/Applied Mathematics/Year 3 Sem 3/ASM")
library(readxl)
Paddy_data <- read_excel("Paddy Production.xlsx")
library(forecast)
#Create Paddy Time Series (PD_TS) data.
PD_TS <-ts(data = Paddy_data[,2], start= 1980, end = 2016)
plot.ts(x = PD_TS, xlab = "t (period)", ylab = "Paddy Production (100000 per unit)",
type = "o", col = "red", main = "Time Series with Paddy Production to Year")
#ACF shows exponential decay, no sin-wave observed, conclude that it is AR(1)
#It is non-stationary data.
acf(x=PD_TS,plot = TRUE)
#PACF shows exponential decay with 2 significant partial autocorrelation.
pacf(x=PD_TS,plot=TRUE)
Box.test(PD_TS)
Box.test(PD_TS, type="Ljung")
PD_TS_lag_1 <- ts(diff(PD_TS, lag=1))
ts.plot(PD_TS_lag_1,gpars=list(main= "First Differences", xlab="Year", ylab="GDP",lty=1))
acf(PD_TS_lag_1, main="First Differences")
pacf(PD_TS_lag_1, main="First Differences")
Box.test(PD_TS_lag_1)
Box.test(PD_TS_lag_1, type="Ljung")
my.model = auto.arima(PD_TS,seasonal = FALSE)
my.model2 = arima(PD_TS,order =c(1,2,0))
my.model3 = arima(PD_TS,order =c(2,2,0))
my.model
setwd("E:/EUGENE POK/Documents/Applied Mathematics/Year 3 Sem 3/ASM")
library(readxl)
Paddy_data <- read_excel("GDP Data.xlsx")
#Paddy data is now in 100000 per unit.
Paddy_data[,2] = log(Paddy_data[,2])
library(forecast)
#Create Paddy Time Series (PD_TS) data.
PD_TS <-ts(data = Paddy_data[,2], start= 1955, end = 2016)
plot.ts(x = PD_TS, xlab = "t (period)", ylab = "Paddy Production (100000 per unit)",
type = "o", col = "red", main = "Time Series with Paddy Production to Year")
#ACF shows exponential decay, no sin-wave observed, conclude that it is AR(1)
#It is non-stationary data.
acf(x=PD_TS,plot = TRUE)
#PACF shows exponential decay with 2 significant partial autocorrelation.
pacf(x=PD_TS,plot=TRUE)
Box.test(PD_TS)
Box.test(PD_TS, type="Ljung")
#ACF shows exponential decay, no sin-wave observed, conclude that it is AR(1)
#It is non-stationary data.
acf(x=PD_TS,plot = TRUE)
#PACF shows exponential decay with 2 significant partial autocorrelation.
pacf(x=PD_TS,plot=TRUE)
#ACF shows exponential decay, no sin-wave observed, conclude that it is AR(1)
#It is non-stationary data.
acf(x=PD_TS,plot = TRUE)
PD_TS_lag_1 <- ts(diff(PD_TS, lag=1))
ts.plot(PD_TS_lag_1,gpars=list(main= "First Differences", xlab="Year", ylab="GDP",lty=1))
acf(PD_TS_lag_1, main="First Differences")
pacf(PD_TS_lag_1, main="First Differences")
Box.test(PD_TS_lag_1)
Box.test(PD_TS_lag_1, type="Ljung")
PD_TS_lag_2 <- ts(diff(PD_TS_lag_1, lag=1))
ts.plot(PD_TS_lag_2,gpars=list(main= "Second Differences", xlab="Year", ylab="GDP",lty=1))
acf(PD_TS_lag_2, main="Second Differences")
pacf(PD_TS_lag_2, main="Second Differences")
Box.test(PD_TS_lag_2)
Box.test(PD_TS_lag_2, type="Ljung")
my.model = auto.arima(PD_TS,seasonal = FALSE,allowdrift = FALSE)
my.model
AIC <- matrix(0, 5,5)
for (p in 0:4)
for (q in 0:4)
{
mod.fit <- arima(PD_TS, order=c(p,1,q))
AIC[p+1,q+1] <- mod.fit$aic
p
}
AIC
fcast = forecast(my.model2,h=5)
plot(fcast)
my.final.model = arima(PD_TS,order =c(1,1,1))
fcast = forecast(my.final.model,h=5)
plot(fcast)
Box.test(my.model$residuals)
Box.test(my.model$residuals, type="Ljung")
qqnorm(my.model$residuals)
qqline(my.model$residuals)
plot(my.model$x,col="red")
lines(fitted(my.model),col="blue")
Box.test(my.final.model$residuals)
Box.test(my.final.model$residuals, type="Ljung")
fc = forecast(my.model,h=3)
fc = forecast(my.final.model,h=3)
plot(fc)
qqnorm(my.final.model$residuals)
qqline(my.final.model$residuals)
plot(my.final.model$x,col="red")
View(my.final.model)
plot(my.model$x,col="red")
lines(fitted(my.model),col="blue")
my.model$x
my.final.model$x
lines(fitted(my.final.model),col="blue")
lines(fitted(my.final.model),col="blue")
lines(fitted(my.final.model),col="blue")
plot(my.final.model$x,col="red")
plot(my.model$x,col="red")
lines(fitted(my.final.model),col="blue")
lines(fitted(my.model),col="green")
AIC <- matrix(0,5,5)
for (p in 0:4)
for (q in 0:4)
{
mod.fit <- arima(PD_TS, order=c(p,2,q))
AIC[p+1,q+1] <- mod.fit$aic
p
}
AIC
my.final.model = arima(PD_TS,order =c(2,2,0))
lines(fitted(my.final.model),col="purple")
plot(my.model$x,col="red")
lines(fitted(my.final.model),col="purple")
my.final.model = arima(PD_TS,order =c(1,1,1))
lines(fitted(my.final.model),col="blue")
d1=read.table("student-mat.csv",sep=";",header=TRUE)
d2=read.table("student-por.csv",sep=";",header=TRUE)
d1.length = dim(d1)[1]
setwd("D:/Git/Student-Predictive-Modelling/student")
d1=read.table("student-mat.csv",sep=";",header=TRUE)
d2=read.table("student-por.csv",sep=";",header=TRUE)
d1.length = dim(d1)[1]
id = 1:d1.length
pass_fail = as.factor(d1$G3 >= 10)
d1 = data.frame(id,d1,pass_fail)
colnames(d1)
View(d1)
# The function is to slice & manipulate the data in
# simple way.
library(dplyr)
# Ploting library
library(ggplot2)
library(ggthemes)
library(colorspace)
library(GGally)
install.packages("GGally")
library(GGally)
student=merge(student.mat,student.por,by=c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
#######################
#if(TRUE){
#Make G3 as binary variable
student[which(student$G3.x<10),"G3.x"]<-0
student=merge(student.mat,student.por,by=c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
setwd("D:/Git/Student-Predictive-Modelling/student")
student=merge(student.mat,student.por,by=c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
student=merge(student.mat.csv,student.por.csv,by=c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
student.mat <- read.csv("D:/Git/Student-Predictive-Modelling/student/student-mat.csv", sep=";")
View(student.mat)
student.mat=read.table("student-mat.csv",sep=";",header=TRUE)
student.por=read.table("student-por.csv",sep=";",header=TRUE)
student=merge(student.mat,student.por,by=c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
#######################
#if(TRUE){
#Make G3 as binary variable
student[which(student$G3.x<10),"G3.x"]<-0
student[which(student$G3.x>=10),"G3.x"]<-1
student$G3.x<-as.factor(student$G3.x)
student[which(student$G3.y<10),"G3.y"]<-0
student[which(student$G3.y>=10),"G3.y"]<-1
student$G3.y<-as.factor(student$G3.y)
#}
#######################
##### 1. Data Prep. & Exploration ####
#.i View Data
names(student) # Check Var. name
str(student) # Check Var. class
ncol(student)
######## Check for missing variable ###########
### Check for overal
sum(is.na(student))# No NA exist
sum(student=="") # No data have empty string
### Use it for checking Missing Data in each variable,
### since the data dont have missing variable, we no need use these tow lines
sapply(student,function(x) sum(is.na(x)))
sapply(student,function(x) sum(x==""))
##### Change variable type ####
factor_variable <- c("Medu","Fedu",
"traveltime.x","studytime.x","failures.x",
"famrel.x","freetime.x","goout.x",
"Dalc.x","Walc.x","health.x",
"traveltime.y","studytime.y","failures.y",
"famrel.y","freetime.y","goout.y",
"Dalc.y","Walc.y","health.y"
)
student[factor_variable] <- lapply(student[factor_variable], factor)
sapply(student,class) # Check the class for each variable
############ Individual variable distribution checking ###############
setDT(student) # Set as data.table to use the function in library "data.table"
student[,.N,by=list(G3.x)][,perc:=100*N/sum(N)] %>%
ggplot(aes(x=G3.x,y=perc)) +
geom_bar(stat="identity", width = 0.7)+
labs(x = "G3 Result(Math.)", y = "percent")+
ggtitle("Distribution in G3 Result(Math.)")+
theme_minimal(base_size = 14)
# The function is to slice & manipulate the data in
# simple way.
library(dplyr)
# Ploting library
library(ggplot2)
library(ggthemes)
library(colorspace)
library(GGally)
############ Individual variable distribution checking ###############
setDT(student) # Set as data.table to use the function in library "data.table"
############ Individual variable distribution checking ###############
setDT(student) # Set as data.table to use the function in library "data.table"
?setDT
library("data.table", lib.loc="D:/Program Files/R/R-3.5.3/library")
############ Individual variable distribution checking ###############
setDT(student) # Set as data.table to use the function in library "data.table"
############ Individual variable distribution checking ###############
library(dta.table)
############ Individual variable distribution checking ###############
library(data.table)
setDT(student) # Set as data.table to use the function in library "data.table"
student[,.N,by=list(G3.x)][,perc:=100*N/sum(N)] %>%
ggplot(aes(x=G3.x,y=perc)) +
geom_bar(stat="identity", width = 0.7)+
labs(x = "G3 Result(Math.)", y = "percent")+
ggtitle("Distribution in G3 Result(Math.)")+
theme_minimal(base_size = 14)
student[,.N,by=list(G3.y)][,perc:=100*N/sum(N)] %>%
ggplot(aes(x=G3.y,y=perc)) +
geom_bar(stat="identity", width = 0.7)+
labs(x = "G3 Result(Por.)", y = "percent")+
ggtitle("Distribution in G3 Result(Por.)")+
theme_minimal(base_size = 14)
student[,.N,by=list(G3.x)][,perc:=100*N/sum(N)] %>%
ggplot(aes(x=G3.x,y=perc)) +
geom_bar(stat="identity", width = 0.7)+
labs(x = "G3 Result(Math.)", y = "percent")+
ggtitle("Distribution in G3 Result(Math.)")+
theme_minimal(base_size = 14)
setDF(student) # Set back to data.frame format
# Comment on G3. Mathematic:
# No significant factor level could affected the response variable greatly
student%>%
group_by(Mjob,G3.x) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count))%>%
ggplot(aes(x = Mjob, y = perc*100, fill = G3.x)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Mjob", y = "percent", fill = "G3.x") +
ggtitle("How Mjob impacts G3 Result(Math.)")+
theme_minimal(base_size = 14)
student%>%
group_by(Fjob,G3.x) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count))%>%
ggplot(aes(x = Fjob, y = perc*100, fill = G3.x)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Fjob", y = "percent", fill = "G3.x") +
ggtitle("How Fjob impacts G3 Result(Math.)")+
theme_minimal(base_size = 14)
student%>%
group_by(Mjob,G3.y) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count)) %>%
ggplot(aes(x = Mjob, y = perc*100, fill = G3.y)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Mjob", y = "percent", fill = "G3.y") +
ggtitle("How Mjob impacts G3 Result(Por.)")+
theme_minimal(base_size = 14)
student%>%
group_by(Fjob,G3.y) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count)) %>%
ggplot(aes(x = Fjob, y = perc*100, fill = G3.y)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Fjob", y = "percent", fill = "G3.y") +
ggtitle("How Fjob impacts G3 Result(Por.)")+
theme_minimal(base_size = 14)
# Age vs G3. Math,
student%>%
group_by(age,G3.x) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count)) %>%
ggplot(aes(x = age, y = perc*100, fill = G3.x)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Age", y = "percent", fill = "G3.x") +
ggtitle("How Age impacts G3 Result(Math.)")+
theme_minimal(base_size = 14)
ggplot(data = student,mapping = aes(x=age,y=..count..,fill=G3.x))+
geom_bar(stat = "count",position = "dodge")+
xlab("Age")+
ylab("Count")+
ggtitle("How Age impacts G3 Result(Math.)")+
geom_text(stat = "count",aes(label=..count..),position = position_dodge(width = 1),vjust=-.6)+
theme_few()
# Age vs G3. Portuguese
student%>%
group_by(age,G3.y) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count)) %>%
ggplot(aes(x = age, y = perc*100, fill = G3.y)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Age", y = "percent", fill = "G3.y") +
ggtitle("How Age impacts G3 Result(Port.)")+
theme_minimal(base_size = 14)
# Age vs G3. Portuguese
student%>%
group_by(age,G3.y) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count)) %>%
ggplot(aes(x = age, y = perc*100, fill = G3.y)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Age", y = "percent", fill = "G3.y") +
ggtitle("How Age impacts G3 Result(Port.)")+
theme_minimal(base_size = 14)
ggplot(data = student,mapping = aes(x=age,y=..count..,fill=G3.x))+
geom_bar(stat = "count",position = "dodge")+
xlab("Age")+
ylab("Count")+
ggtitle("How Age impacts G3 Result(Math.)")+
geom_text(stat = "count",aes(label=..count..),position = position_dodge(width = 1),vjust=-.6)+
theme_few()
# Age vs G3. Portuguese
student%>%
group_by(age,G3.y) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count)) %>%
ggplot(aes(x = age, y = perc*100, fill = G3.y)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Age", y = "percent", fill = "G3.y") +
ggtitle("How Age impacts G3 Result(Port.)")+
theme_minimal(base_size = 14)
ggplot(data = student,mapping = aes(x=age,y=..count..,fill=G3.x))+
geom_bar(stat = "count",position = "dodge")+
xlab("Age")+
ylab("Count")+
ggtitle("How Age impacts G3 Result(Math.)")+
geom_text(stat = "count",aes(label=..count..),position = position_dodge(width = 1),vjust=-.6)+
theme_few()
# Age vs G3. Math,
student%>%
group_by(age,G3.x) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count)) %>%
ggplot(aes(x = age, y = perc*100, fill = G3.x)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Age", y = "percent", fill = "G3.x") +
ggtitle("How Age impacts G3 Result(Math.)")+
theme_minimal(base_size = 14)
ggplot(data = student,mapping = aes(x=age,y=..count..,fill=G3.x))+
geom_bar(stat = "count",position = "dodge")+
xlab("Age")+
ylab("Count")+
ggtitle("How Age impacts G3 Result(Math.)")+
geom_text(stat = "count",aes(label=..count..),position = position_dodge(width = 1),vjust=-.6)+
theme_few()
# Age vs G3. Math,
student%>%
group_by(age,G3.x) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count)) %>%
ggplot(aes(x = age, y = perc*100, fill = G3.x)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Age", y = "percent", fill = "G3.x") +
ggtitle("How Age impacts G3 Result(Math.)")+
theme_minimal(base_size = 14)
ggplot(data = student,mapping = aes(x=age,y=..count..,fill=G3.x))+
geom_bar(stat = "count",position = "dodge")+
xlab("Age")+
ylab("Count")+
ggtitle("How Age impacts G3 Result(Math.)")+
geom_text(stat = "count",aes(label=..count..),position = position_dodge(width = 1),vjust=-.6)+
theme_few()
# Age vs G3. Portuguese
student%>%
group_by(age,G3.y) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count)) %>%
ggplot(aes(x = age, y = perc*100, fill = G3.y)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Age", y = "percent", fill = "G3.y") +
ggtitle("How Age impacts G3 Result(Port.)")+
theme_minimal(base_size = 14)
student%>%
group_by(Mjob,G3.y) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count)) %>%
ggplot(aes(x = Mjob, y = perc*100, fill = G3.y)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Mjob", y = "percent", fill = "G3.y") +
ggtitle("How Mjob impacts G3 Result(Por.)")+
theme_minimal(base_size = 14)
student%>%
group_by(Fjob,G3.x) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count))%>%
ggplot(aes(x = Fjob, y = perc*100, fill = G3.x)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Fjob", y = "percent", fill = "G3.x") +
ggtitle("How Fjob impacts G3 Result(Math.)")+
theme_minimal(base_size = 14)
# Comment on G3. Mathematic:
# No significant factor level could affected the response variable greatly
student%>%
group_by(Mjob,G3.x) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count))%>%
ggplot(aes(x = Mjob, y = perc*100, fill = G3.x)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Mjob", y = "percent", fill = "G3.x") +
ggtitle("How Mjob impacts G3 Result(Math.)")+
theme_minimal(base_size = 14)
# Age vs G3. Portuguese
student%>%
group_by(age,G3.y) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count)) %>%
ggplot(aes(x = age, y = perc*100, fill = G3.y)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Age", y = "percent", fill = "G3.y") +
ggtitle("How Age impacts G3 Result(Port.)")+
theme_minimal(base_size = 14)
ggplot(data = student,mapping = aes(x=age,y=..count..,fill=G3.y))+
geom_bar(stat = "count",position = "dodge")+
xlab("Age")+
ylab("Count")+
ggtitle("How Age impacts G3 Result(Port.)")+
geom_text(stat = "count",aes(label=..count..),position = position_dodge(width = 1),vjust=-.6)+
theme_few()
# Temporary change the response variable to integer type
student$G3.x<-as.integer(student$G3.x)
student$G3.y<-as.integer(student$G3.y)
student %>%
select(which(sapply(.,is.integer))) %>%  # Select all integer class variable
ggcorr(nbreaks = 4, palette = "RdGy", label = TRUE,
label_size = 3, label_color = "white")
student[,.N,by=list(G3.x)][,perc:=100*N/sum(N)] %>%
ggplot(aes(x=G3.x,y=perc)) +
geom_bar(stat="identity", width = 0.7)+
labs(x = "G3 Result(Math.)", y = "percent")+
ggtitle("Distribution in G3 Result(Math.)")+
theme_minimal(base_size = 14)
############ Individual variable distribution checking ###############
library(data.table)
setDT(student) # Set as data.table to use the function in library "data.table"
student[,.N,by=list(G3.x)][,perc:=100*N/sum(N)] %>%
ggplot(aes(x=G3.x,y=perc)) +
geom_bar(stat="identity", width = 0.7)+
labs(x = "G3 Result(Math.)", y = "percent")+
ggtitle("Distribution in G3 Result(Math.)")+
theme_minimal(base_size = 14)
student[,.N,by=list(G3.y)][,perc:=100*N/sum(N)] %>%
ggplot(aes(x=G3.y,y=perc)) +
geom_bar(stat="identity", width = 0.7)+
labs(x = "G3 Result(Por.)", y = "percent")+
ggtitle("Distribution in G3 Result(Por.)")+
theme_minimal(base_size = 14)
setDF(student) # Set back to data.frame format
# Comment on G3. Mathematic:
# No significant factor level could affected the response variable greatly
student%>%
group_by(Mjob,G3.x) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count))%>%
ggplot(aes(x = Mjob, y = perc*100, fill = G3.x)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Mjob", y = "percent", fill = "G3.x") +
ggtitle("How Mjob impacts G3 Result(Math.)")+
theme_minimal(base_size = 14)
student%>%
group_by(Fjob,G3.x) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count))%>%
ggplot(aes(x = Fjob, y = perc*100, fill = G3.x)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Fjob", y = "percent", fill = "G3.x") +
ggtitle("How Fjob impacts G3 Result(Math.)")+
theme_minimal(base_size = 14)
student%>%
group_by(Mjob,G3.y) %>%
summarise(count=n()) %>%
mutate(perc=count/sum(count)) %>%
ggplot(aes(x = Mjob, y = perc*100, fill = G3.y)) +
geom_bar(stat="identity", width = 0.7) +
labs(x = "Mjob", y = "percent", fill = "G3.y") +
ggtitle("How Mjob impacts G3 Result(Por.)")+
theme_minimal(base_size = 14)
